{"ast":null,"code":"var _jsxFileName = \"/Users/machina/Developer/biov-frontend/src/context/QuestionnaireContextProvider.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { APIClient } from \"../helpers/APIC\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuestionnaireContext = /*#__PURE__*/createContext(undefined);\nexport const QuestionnaireContextProvider = ({\n  children\n}) => {\n  _s();\n  const [questionnaires, setQuestionnaires] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    try {\n      new APIClient().fetchQuestionnaires().then(response => {\n        if (!response) {\n          throw new Error(\"Failed to fetch questionnaires\");\n        }\n        response.json().then(data => {\n          const questionnaires = data.map(questionnaire => questionnaire);\n          setQuestionnaires(questionnaires);\n        });\n      });\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(QuestionnaireContext.Provider, {\n    value: {\n      questionnaires,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionnaireContextProvider, \"E3ZCfxmHFdtp3QtJGzaK3wL3mmk=\");\n_c = QuestionnaireContextProvider;\nvar _c;\n$RefreshReg$(_c, \"QuestionnaireContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","APIClient","jsxDEV","_jsxDEV","QuestionnaireContext","undefined","QuestionnaireContextProvider","children","_s","questionnaires","setQuestionnaires","loading","setLoading","error","setError","fetchQuestionnaires","then","response","Error","json","data","map","questionnaire","err","message","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/machina/Developer/biov-frontend/src/context/QuestionnaireContextProvider.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport { QuestionnaireContextType } from \"../pages/questionnaire-dashboard/types/QuestionnaireContextType\";\nimport { QuestionnaireProviderProps } from \"../pages/questionnaire-dashboard/types/QuestionnaireContextProviderProps\";\nimport { APIClient } from \"../helpers/APIC\";\nimport { QuestionnaireType } from \"../pages/questionnaire-dashboard/types/QuestionnaireType\";\n\nexport const QuestionnaireContext = createContext<\n  QuestionnaireContextType | undefined\n>(undefined);\n\nexport const QuestionnaireContextProvider: React.FC<\n  QuestionnaireProviderProps\n> = ({ children }) => {\n  const [questionnaires, setQuestionnaires] = useState<QuestionnaireType[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    try {\n      new APIClient().fetchQuestionnaires().then((response) => {\n        if (!response) {\n          throw new Error(\"Failed to fetch questionnaires\");\n        }\n\n        response.json().then((data) => {\n          const questionnaires = data.map(\n            (questionnaire: any) => questionnaire as QuestionnaireType\n          );\n          setQuestionnaires(questionnaires);\n        });\n      });\n    } catch (err: any) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  return (\n    <QuestionnaireContext.Provider value={{ questionnaires, loading, error }}>\n      {children}\n    </QuestionnaireContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAGjE,SAASC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,OAAO,MAAMC,oBAAoB,gBAAGN,aAAa,CAE/CO,SAAS,CAAC;AAEZ,OAAO,MAAMC,4BAEZ,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAsB,EAAE,CAAC;EAC7E,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAgB,IAAI,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd,IAAI;MACF,IAAIC,SAAS,CAAC,CAAC,CAACc,mBAAmB,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QACvD,IAAI,CAACA,QAAQ,EAAE;UACb,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;QACnD;QAEAD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAAEI,IAAI,IAAK;UAC7B,MAAMX,cAAc,GAAGW,IAAI,CAACC,GAAG,CAC5BC,aAAkB,IAAKA,aAC1B,CAAC;UACDZ,iBAAiB,CAACD,cAAc,CAAC;QACnC,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOc,GAAQ,EAAE;MACjBT,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,SAAS;MACRZ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EACN,oBACET,OAAA,CAACC,oBAAoB,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,cAAc;MAAEE,OAAO;MAAEE;IAAM,CAAE;IAAAN,QAAA,EACtEA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACoB,CAAC;AAEpC,CAAC;AAACtB,EAAA,CAhCWF,4BAEZ;AAAAyB,EAAA,GAFYzB,4BAEZ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}