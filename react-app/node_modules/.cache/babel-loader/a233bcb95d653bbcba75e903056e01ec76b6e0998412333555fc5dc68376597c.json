{"ast":null,"code":"var _jsxFileName = \"/Users/machina/Developer/biov-front/src/components/pages/questionnaire/Questionnaire.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Container, Typography, RadioGroup, Radio, FormControlLabel, Button, LinearProgress, Box } from \"@mui/material\";\nimport { useQuestionnaires } from \"../questionnaire-context/hooks/useQuestionnaires\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questionnaireData = {\n  id: 1,\n  title: \"Customer Satisfaction Survey\",\n  questions: [{\n    id: 1,\n    text: \"How satisfied are you with our service?\",\n    options: [\"Very satisfied\", \"Satisfied\", \"Neutral\", \"Dissatisfied\", \"Very dissatisfied\"]\n  }, {\n    id: 2,\n    text: \"How likely are you to recommend us to others?\",\n    options: [\"Very likely\", \"Likely\", \"Neutral\", \"Unlikely\", \"Very unlikely\"]\n  }\n  // Add more questions as needed\n  ]\n};\nexport const Questionnaire = () => {\n  _s();\n  const questionnaires = useQuestionnaires();\n  const questionnaire = questionnaires.questionnaires.find(q => q.id === Number(id));\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const handleAnswerChange = (questionId, answer) => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [questionId]: answer\n    }));\n  };\n  const handleNext = () => {\n    if (currentQuestionIndex < questionnaireData.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  const currentQuestion = questionnaireData.questions[currentQuestionIndex];\n  const progress = (currentQuestionIndex + 1) / questionnaireData.questions.length * 100;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: questionnaireData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: currentQuestion.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        value: answers[currentQuestion.id] || \"\",\n        onChange: e => handleAnswerChange(currentQuestion.id, e.target.value),\n        children: currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: option,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 24\n          }, this),\n          label: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handlePrevious,\n        disabled: currentQuestionIndex === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleNext,\n        disabled: currentQuestionIndex === questionnaireData.questions.length - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        children: `Progress: ${currentQuestionIndex + 1}/${questionnaireData.questions.length}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Questionnaire, \"piMtuIL8n0r41mgMW+LEotIszjM=\", false, function () {\n  return [useQuestionnaires];\n});\n_c = Questionnaire;\nvar _c;\n$RefreshReg$(_c, \"Questionnaire\");","map":{"version":3,"names":["React","useState","Container","Typography","RadioGroup","Radio","FormControlLabel","Button","LinearProgress","Box","useQuestionnaires","jsxDEV","_jsxDEV","questionnaireData","id","title","questions","text","options","Questionnaire","_s","questionnaires","questionnaire","find","q","Number","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","handleAnswerChange","questionId","answer","prevAnswers","handleNext","length","handlePrevious","currentQuestion","progress","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","mt","value","onChange","e","target","map","option","control","label","display","justifyContent","onClick","disabled","color","_c","$RefreshReg$"],"sources":["/Users/machina/Developer/biov-front/src/components/pages/questionnaire/Questionnaire.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  Container,\n  Typography,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Button,\n  LinearProgress,\n  Box,\n} from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuestionnaires } from \"../questionnaire-context/hooks/useQuestionnaires\";\ninterface Question {\n  id: number;\n  text: string;\n  options: string[];\n}\n\ninterface QuestionnaireData {\n  id: number;\n  title: string;\n  questions: Question[];\n}\n\nconst questionnaireData: QuestionnaireData = {\n  id: 1,\n  title: \"Customer Satisfaction Survey\",\n  questions: [\n    {\n      id: 1,\n      text: \"How satisfied are you with our service?\",\n      options: [\n        \"Very satisfied\",\n        \"Satisfied\",\n        \"Neutral\",\n        \"Dissatisfied\",\n        \"Very dissatisfied\",\n      ],\n    },\n    {\n      id: 2,\n      text: \"How likely are you to recommend us to others?\",\n      options: [\n        \"Very likely\",\n        \"Likely\",\n        \"Neutral\",\n        \"Unlikely\",\n        \"Very unlikely\",\n      ],\n    },\n    // Add more questions as needed\n  ],\n};\n\nexport const Questionnaire: React.FC = () => {\n  const questionnaires = useQuestionnaires();\n  const questionnaire = questionnaires.questionnaires.find(\n    (q) => q.id === Number(id)\n  );\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState<Record<number, string>>({});\n  const handleAnswerChange = (questionId: number, answer: string) => {\n    setAnswers((prevAnswers) => ({\n      ...prevAnswers,\n      [questionId]: answer,\n    }));\n  };\n\n  const handleNext = () => {\n    if (currentQuestionIndex < questionnaireData.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  const currentQuestion = questionnaireData.questions[currentQuestionIndex];\n  const progress =\n    ((currentQuestionIndex + 1) / questionnaireData.questions.length) * 100;\n\n  return (\n    <Container>\n      <Typography variant=\"h4\">{questionnaireData.title}</Typography>\n      <Box mt={4}>\n        <Typography variant=\"h6\">{currentQuestion.text}</Typography>\n        <RadioGroup\n          value={answers[currentQuestion.id] || \"\"}\n          onChange={(e) =>\n            handleAnswerChange(currentQuestion.id, e.target.value)\n          }\n        >\n          {currentQuestion.options.map((option) => (\n            <FormControlLabel\n              key={option}\n              value={option}\n              control={<Radio />}\n              label={option}\n            />\n          ))}\n        </RadioGroup>\n      </Box>\n      <Box mt={4} display=\"flex\" justifyContent=\"space-between\">\n        <Button\n          variant=\"contained\"\n          onClick={handlePrevious}\n          disabled={currentQuestionIndex === 0}\n        >\n          Previous\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handleNext}\n          disabled={\n            currentQuestionIndex === questionnaireData.questions.length - 1\n          }\n        >\n          Next\n        </Button>\n      </Box>\n      <Box mt={4}>\n        <LinearProgress variant=\"determinate\" value={progress} />\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {`Progress: ${currentQuestionIndex + 1}/${\n            questionnaireData.questions.length\n          }`}\n        </Typography>\n      </Box>\n    </Container>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}