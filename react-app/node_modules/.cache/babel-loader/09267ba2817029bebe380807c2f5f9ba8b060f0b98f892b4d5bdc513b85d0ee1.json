{"ast":null,"code":"var _jsxFileName = \"/Users/machina/Developer/biov-frontend/src/pages/admin-panel/AdminModal.tsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Modal from \"@mui/material/Modal\";\nimport { Table, TableCell, TableContainer, TableHead, TableRow } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AdminModal = props => {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleOpen,\n      children: \"Open modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: /*#__PURE__*/_jsxDEV(TableHead, {\n            children: [props.qStat.questionnaireResponses.map(qNairRes => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: qNairRes.questionResponses.map(qResponse => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Q:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [\"A:\", qResponse.getAnswer()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: `${props.qStat.userId}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: `${props.qStat.count}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminModal, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n_c = AdminModal;\nvar _c;\n$RefreshReg$(_c, \"AdminModal\");","map":{"version":3,"names":["React","Button","Modal","Table","TableCell","TableContainer","TableHead","TableRow","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminModal","props","_s","open","setOpen","useState","handleOpen","handleClose","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","qStat","questionnaireResponses","map","qNairRes","questionResponses","qResponse","getAnswer","userId","count","_c","$RefreshReg$"],"sources":["/Users/machina/Developer/biov-frontend/src/pages/admin-panel/AdminModal.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Modal from \"@mui/material/Modal\";\nimport { AdminModalProps } from \"../../types/pages/AdminModalProps\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\n\nexport const AdminModal: React.FC<AdminModalProps> = (props) => {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div>\n      <Button onClick={handleOpen}>Open modal</Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        {/* <Box className={styles.modal}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Text in a modal\n          </Typography>\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n          </Typography>\n        </Box> */}\n        <TableContainer>\n          <Table>\n            <TableHead>\n              {props.qStat.questionnaireResponses.map((qNairRes) => (\n                <TableRow>\n                  {qNairRes.questionResponses.map((qResponse) => (\n                    <>\n                      <TableCell>Q:</TableCell>\n                      <TableCell>A:{qResponse.getAnswer()}</TableCell>\n                    </>\n                  ))}\n                </TableRow>\n              ))}\n              <TableRow>\n                <TableCell>{`${props.qStat.userId}`}</TableCell>\n                <TableCell>{`${props.qStat.count}`}</TableCell>\n              </TableRow>\n            </TableHead>\n          </Table>\n        </TableContainer>\n      </Modal>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}