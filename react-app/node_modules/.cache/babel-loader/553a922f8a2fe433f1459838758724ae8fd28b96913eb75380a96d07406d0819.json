{"ast":null,"code":"var _jsxFileName = \"/Users/machina/Developer/biov-frontend/src/pages/splash/login/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid2\";\nimport styles from \"./scss/Login.scss\";\nimport { CustomTextField } from \"../../shared/custom-text-field/CustomTextField\";\nimport { BlackButton } from \"../../shared/button/BlackButton\";\nimport { Typography } from \"@mui/material\";\nimport { useUser } from \"../../../hooks/useUser\";\nimport { useNavigate } from \"react-router-dom\";\nimport { APIClient } from \"../../../helpers/APIC\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const {\n    login\n  } = useUser();\n\n  // State for the form inputs and errors\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const handleLoginClick = () => {\n    // Trim input values to remove leading/trailing whitespace\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n\n    // Validate the inputs\n    if (!trimmedUsername || !trimmedPassword) {\n      setError(\"Username and password cannot be empty or whitespace.\");\n      return;\n    }\n\n    // If validation passes, log the user in\n    const user = {\n      id: trimmedUsername,\n      password: trimmedPassword\n    };\n    APIClient.authenticateUser(user).then(() => {\n      login(user); // Set the user in context after a successful login\n      console.log(\"User logged in:\", user);\n      navigate(\"/questionnaire-home\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: styles.pageContainer,\n    id: \"page-container\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      id: \"login-card\",\n      className: styles.loginCard,\n      sx: {\n        borderRadius: \"5px\",\n        boxShadow: \"0 0 5px 1px #e6e6e6\",\n        paddingBottom: \"80px\",\n        maxWidth: \"600px\",\n        justifyContent: \"center\",\n        maxHeight: \"450px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        id: \"login-card-content\",\n        className: styles.content,\n        container: true,\n        width: \"80%\",\n        sx: {\n          justifyContent: \"center\",\n          paddingTop: \"40px\",\n          paddingLeft: \"40px\",\n          paddingRight: \"40px\",\n          rowGap: \"3vh\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          width: \"80%\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: \"Welcome back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          width: \"100%\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(CustomTextField, {\n            sx: {\n              width: \"80%\"\n            },\n            label: \"Username\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          width: \"100%\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(CustomTextField, {\n            sx: {\n              width: \"80%\"\n            },\n            label: \"Password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          width: \"100%\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          width: \"100%\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(BlackButton, {\n            sx: {\n              width: \"80%\"\n            },\n            onClick: handleLoginClick,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"yIpeqGSkjB0ym6rSaavxHMILTU4=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Grid","styles","CustomTextField","BlackButton","Typography","useUser","useNavigate","APIClient","jsxDEV","_jsxDEV","Login","_s","login","username","setUsername","password","setPassword","error","setError","navigate","handleLoginClick","trimmedUsername","trim","trimmedPassword","user","id","authenticateUser","then","console","log","container","className","pageContainer","children","loginCard","sx","borderRadius","boxShadow","paddingBottom","maxWidth","justifyContent","maxHeight","content","width","paddingTop","paddingLeft","paddingRight","rowGap","variant","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","e","target","type","color","onClick","_c","$RefreshReg$"],"sources":["/Users/machina/Developer/biov-frontend/src/pages/splash/login/Login.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid2\";\nimport styles from \"./scss/Login.scss\";\nimport { CustomTextField } from \"../../shared/custom-text-field/CustomTextField\";\nimport { BlackButton } from \"../../shared/button/BlackButton\";\nimport { Typography } from \"@mui/material\";\nimport { useUser } from \"../../../hooks/useUser\";\nimport { useNavigate } from \"react-router-dom\";\nimport { User } from \"../../../types/domains/User\";\nimport { APIClient } from \"../../../helpers/APIC\";\nexport const Login: React.FC = () => {\n  const { login } = useUser();\n\n  // State for the form inputs and errors\n  const [username, setUsername] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [error, setError] = useState<string | null>(null);\n  const navigate = useNavigate();\n  const handleLoginClick = () => {\n    // Trim input values to remove leading/trailing whitespace\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n\n    // Validate the inputs\n    if (!trimmedUsername || !trimmedPassword) {\n      setError(\"Username and password cannot be empty or whitespace.\");\n      return;\n    }\n\n    // If validation passes, log the user in\n    const user: User = { id: trimmedUsername, password: trimmedPassword };\n    APIClient.authenticateUser(user).then(() => {\n      login(user); // Set the user in context after a successful login\n      console.log(\"User logged in:\", user);\n      navigate(\"/questionnaire-home\");\n    });\n  };\n\n  return (\n    <Grid container className={styles.pageContainer} id=\"page-container\">\n      <Grid\n        container\n        id=\"login-card\"\n        className={styles.loginCard}\n        sx={{\n          borderRadius: \"5px\",\n          boxShadow: \"0 0 5px 1px #e6e6e6\",\n          paddingBottom: \"80px\",\n          maxWidth: \"600px\",\n          justifyContent: \"center\",\n          maxHeight: \"450px\",\n        }}\n      >\n        <Grid\n          id=\"login-card-content\"\n          className={styles.content}\n          container\n          width={\"80%\"}\n          sx={{\n            justifyContent: \"center\",\n            paddingTop: \"40px\",\n            paddingLeft: \"40px\",\n            paddingRight: \"40px\",\n            rowGap: \"3vh\",\n          }}\n        >\n          <Grid container width={\"80%\"}>\n            <Typography variant={\"h4\"}>Welcome back</Typography>\n          </Grid>\n\n          {/* Username input */}\n          <Grid container width={\"100%\"} justifyContent={\"center\"}>\n            <CustomTextField\n              sx={{ width: \"80%\" }}\n              label={\"Username\"}\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </Grid>\n\n          {/* Password input */}\n          <Grid container width={\"100%\"} justifyContent={\"center\"}>\n            <CustomTextField\n              sx={{ width: \"80%\" }}\n              label={\"Password\"}\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Grid>\n\n          {/* Error message */}\n          {error && (\n            <Grid container width={\"100%\"} justifyContent={\"center\"}>\n              <Typography color=\"error\">{error}</Typography>\n            </Grid>\n          )}\n\n          {/* Login button */}\n          <Grid container width={\"100%\"} justifyContent={\"center\"}>\n            <BlackButton sx={{ width: \"80%\" }} onClick={handleLoginClick}>\n              Login\n            </BlackButton>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}