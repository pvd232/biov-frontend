{"ast":null,"code":"var _jsxFileName = \"/Users/machina/Developer/biov-frontend/src/pages/questionnaire-dashboard/questionnaire-context-provider/QuestionnaireContextProvider.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { QuestionnaireContext } from \"../types/QuestionnaireContext\";\n\n// export interface Questionnaire {\n//   id: number;\n//   title: string;\n//   questions: { id: number; text: string; options: string[] }[];\n// }\n\n// interface QuestionnaireContextType {\n//   questionnaires: Questionnaire[];\n//   loading: boolean;\n//   error: string | null;\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CurrQuestionnaireContext = /*#__PURE__*/createContext(undefined);\nexport const QuestionnaireContextProvider = ({\n  children\n}) => {\n  _s();\n  const [questionnaires, setQuestionnaires] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // const response = await fetch(\"/api/questionnaires\");\n        // if (!response.ok) {\n        //   throw new Error(\"Failed to fetch questionnaires\");\n        // }\n        // const data = await response.json();\n        const data = [{\n          id: 1,\n          title: \"Customer Satisfaction Survey\",\n          questions: [{\n            id: 101,\n            text: \"How satisfied are you with our service?\",\n            options: [\"Very satisfied\", \"Satisfied\", \"Neutral\", \"Dissatisfied\", \"Very dissatisfied\"]\n          }, {\n            id: 102,\n            text: \"How would you rate the quality of our products?\",\n            options: [\"Excellent\", \"Good\", \"Average\", \"Below average\", \"Poor\"]\n          }, {\n            id: 103,\n            text: \"How likely are you to recommend our products to others?\",\n            options: [\"Very likely\", \"Somewhat likely\", \"Neutral\", \"Somewhat unlikely\", \"Very unlikely\"]\n          }]\n        }, {\n          id: 2,\n          title: \"Employee Engagement Survey\",\n          questions: [{\n            id: 201,\n            text: \"How meaningful is your work?\",\n            options: [\"Very meaningful\", \"Somewhat meaningful\", \"Neutral\", \"Not very meaningful\", \"Not meaningful at all\"]\n          }, {\n            id: 202,\n            text: \"How well are you recognized for your contributions?\",\n            options: [\"Very well\", \"Well\", \"Moderately\", \"Poorly\", \"Not at all\"]\n          }]\n        }, {\n          id: 3,\n          title: \"Product Feedback\",\n          questions: [{\n            id: 301,\n            text: \"How satisfied are you with our product functionality?\",\n            options: [\"Very satisfied\", \"Satisfied\", \"Neutral\", \"Dissatisfied\", \"Very dissatisfied\"]\n          }, {\n            id: 302,\n            text: \"How do you rate the usability of our product?\",\n            options: [\"Excellent\", \"Good\", \"Average\", \"Poor\", \"Very Poor\"]\n          }]\n        }];\n        setQuestionnaires(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(QuestionnaireContext.Provider, {\n    value: {\n      questionnaires,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionnaireContextProvider, \"E3ZCfxmHFdtp3QtJGzaK3wL3mmk=\");\n_c = QuestionnaireContextProvider;\nvar _c;\n$RefreshReg$(_c, \"QuestionnaireContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","QuestionnaireContext","jsxDEV","_jsxDEV","CurrQuestionnaireContext","undefined","QuestionnaireContextProvider","children","_s","questionnaires","setQuestionnaires","loading","setLoading","error","setError","fetchData","data","id","title","questions","text","options","err","message","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/machina/Developer/biov-frontend/src/pages/questionnaire-dashboard/questionnaire-context-provider/QuestionnaireContextProvider.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect, ReactNode } from \"react\";\nimport { Questionnaire } from \"../types/Questionnaire\";\nimport { QuestionnaireContext } from \"../types/QuestionnaireContext\";\n\n// export interface Questionnaire {\n//   id: number;\n//   title: string;\n//   questions: { id: number; text: string; options: string[] }[];\n// }\n\n// interface QuestionnaireContextType {\n//   questionnaires: Questionnaire[];\n//   loading: boolean;\n//   error: string | null;\n// }\n\nexport const CurrQuestionnaireContext = createContext<\n  QuestionnaireContext | undefined\n>(undefined);\n\ninterface QuestionnaireProviderProps {\n  children: ReactNode;\n}\n\nexport const QuestionnaireContextProvider: React.FC<\n  QuestionnaireProviderProps\n> = ({ children }) => {\n  const [questionnaires, setQuestionnaires] = useState<Questionnaire[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // const response = await fetch(\"/api/questionnaires\");\n        // if (!response.ok) {\n        //   throw new Error(\"Failed to fetch questionnaires\");\n        // }\n        // const data = await response.json();\n        const data = [\n          {\n            id: 1,\n            title: \"Customer Satisfaction Survey\",\n            questions: [\n              {\n                id: 101,\n                text: \"How satisfied are you with our service?\",\n                options: [\n                  \"Very satisfied\",\n                  \"Satisfied\",\n                  \"Neutral\",\n                  \"Dissatisfied\",\n                  \"Very dissatisfied\",\n                ],\n              },\n              {\n                id: 102,\n                text: \"How would you rate the quality of our products?\",\n                options: [\n                  \"Excellent\",\n                  \"Good\",\n                  \"Average\",\n                  \"Below average\",\n                  \"Poor\",\n                ],\n              },\n              {\n                id: 103,\n                text: \"How likely are you to recommend our products to others?\",\n                options: [\n                  \"Very likely\",\n                  \"Somewhat likely\",\n                  \"Neutral\",\n                  \"Somewhat unlikely\",\n                  \"Very unlikely\",\n                ],\n              },\n            ],\n          },\n          {\n            id: 2,\n            title: \"Employee Engagement Survey\",\n            questions: [\n              {\n                id: 201,\n                text: \"How meaningful is your work?\",\n                options: [\n                  \"Very meaningful\",\n                  \"Somewhat meaningful\",\n                  \"Neutral\",\n                  \"Not very meaningful\",\n                  \"Not meaningful at all\",\n                ],\n              },\n              {\n                id: 202,\n                text: \"How well are you recognized for your contributions?\",\n                options: [\n                  \"Very well\",\n                  \"Well\",\n                  \"Moderately\",\n                  \"Poorly\",\n                  \"Not at all\",\n                ],\n              },\n            ],\n          },\n          {\n            id: 3,\n            title: \"Product Feedback\",\n            questions: [\n              {\n                id: 301,\n                text: \"How satisfied are you with our product functionality?\",\n                options: [\n                  \"Very satisfied\",\n                  \"Satisfied\",\n                  \"Neutral\",\n                  \"Dissatisfied\",\n                  \"Very dissatisfied\",\n                ],\n              },\n              {\n                id: 302,\n                text: \"How do you rate the usability of our product?\",\n                options: [\"Excellent\", \"Good\", \"Average\", \"Poor\", \"Very Poor\"],\n              },\n            ],\n          },\n        ];\n\n        setQuestionnaires(data);\n      } catch (err: any) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  return (\n    <QuestionnaireContext.Provider value={{ questionnaires, loading, error }}>\n      {children}\n    </QuestionnaireContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}