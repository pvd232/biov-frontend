{"ast":null,"code":"var _jsxFileName = \"/Users/machina/Developer/biov-frontend/src/pages/questionnaire-dashboard/questionnaire-selection/QuestionnaireSelection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from \"react\";\nimport { Container, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography, Grid2, Button } from \"@mui/material\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { useQuestionnaires } from \"../../../hooks/useQuestionnaires\";\nimport { useQuestionResponses } from \"../../../hooks/useQuestionResponses\";\nimport { UserContext } from \"../../../context/UserContextProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuestionnaireSelection = () => {\n  _s();\n  const {\n    questionnaires,\n    loading,\n    error\n  } = useQuestionnaires(); // Use the custom hook to get data from context\n  const {\n    questionResponses,\n    refetch\n  } = useQuestionResponses(); // Add refetch to update context\n  const userContext = useContext(UserContext);\n  const location = useLocation(); // Get the location object to access passed state\n  const navigate = useNavigate();\n  // Check if the user navigated back from completing a questionnaire\n  useEffect(() => {\n    if (location.state && location.state.fromCompletion) {\n      // Refetch the question responses when navigating back after completion\n      refetch();\n    }\n  }, [location.state, refetch]);\n\n  // Collect unique questionnaire IDs from the responses\n  const uniqueQuestionnaireIds = new Set();\n  for (const qRes of questionResponses) {\n    if (!uniqueQuestionnaireIds.has(qRes.questionnaireId)) {\n      uniqueQuestionnaireIds.add(qRes.questionnaireId);\n    }\n  }\n  for (const qRes of questionResponses) if (!uniqueQuestionnaireIds.has(qRes.questionnaireId)) uniqueQuestionnaireIds.add(qRes.questionnaireId);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Grid2, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid2, {\n        justifyContent: \"flex-end\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            userContext === null || userContext === void 0 ? void 0 : userContext.logout();\n            navigate(\"/\");\n          },\n          children: \"Log out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Questionnaires Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: questionnaires.map((questionnaire, i) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: questionnaire.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: questionnaire.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: uniqueQuestionnaireIds.has(questionnaire.id) ? /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Questionnaire completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Link, {\n                to: `/questionnaire/${questionnaire.id}`,\n                state: {\n                  questionnaire\n                },\n                children: questionnaire.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, questionnaire.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionnaireSelection, \"eT/4X+M7ce1RflG5fucpEEeEFKk=\", false, function () {\n  return [useQuestionnaires, useQuestionResponses, useLocation, useNavigate];\n});\n_c = QuestionnaireSelection;\nvar _c;\n$RefreshReg$(_c, \"QuestionnaireSelection\");","map":{"version":3,"names":["React","useContext","useEffect","Container","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","Grid2","Button","Link","useLocation","useNavigate","useQuestionnaires","useQuestionResponses","UserContext","jsxDEV","_jsxDEV","QuestionnaireSelection","_s","questionnaires","loading","error","questionResponses","refetch","userContext","location","navigate","state","fromCompletion","uniqueQuestionnaireIds","Set","qRes","has","questionnaireId","add","children","fileName","_jsxFileName","lineNumber","columnNumber","container","justifyContent","onClick","logout","component","map","questionnaire","i","id","name","to","_c","$RefreshReg$"],"sources":["/Users/machina/Developer/biov-frontend/src/pages/questionnaire-dashboard/questionnaire-selection/QuestionnaireSelection.tsx"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport {\n  Container,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Typography,\n  Grid2,\n  Button,\n} from \"@mui/material\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { useQuestionnaires } from \"../../../hooks/useQuestionnaires\";\nimport { useQuestionResponses } from \"../../../hooks/useQuestionResponses\";\nimport { UserContext } from \"../../../context/UserContextProvider\";\n\nexport const QuestionnaireSelection: React.FC = () => {\n  const { questionnaires, loading, error } = useQuestionnaires(); // Use the custom hook to get data from context\n  const { questionResponses, refetch } = useQuestionResponses(); // Add refetch to update context\n  const userContext = useContext(UserContext);\n  const location = useLocation(); // Get the location object to access passed state\n  const navigate = useNavigate();\n  // Check if the user navigated back from completing a questionnaire\n  useEffect(() => {\n    if (location.state && location.state.fromCompletion) {\n      // Refetch the question responses when navigating back after completion\n      refetch();\n    }\n  }, [location.state, refetch]);\n\n  // Collect unique questionnaire IDs from the responses\n  const uniqueQuestionnaireIds: Set<number> = new Set();\n  for (const qRes of questionResponses) {\n    if (!uniqueQuestionnaireIds.has(qRes.questionnaireId)) {\n      uniqueQuestionnaireIds.add(qRes.questionnaireId);\n    }\n  }\n  for (const qRes of questionResponses)\n    if (!uniqueQuestionnaireIds.has(qRes.questionnaireId))\n      uniqueQuestionnaireIds.add(qRes.questionnaireId);\n  if (loading) {\n    return (\n      <Container>\n        <h1>Loading...</h1>\n      </Container>\n    );\n  }\n\n  if (error) {\n    return (\n      <Container>\n        <h1>Error: {error}</h1>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <Grid2 container>\n        <Grid2 justifyContent={\"flex-end\"}>\n          <Button\n            onClick={() => {\n              userContext?.logout();\n              navigate(\"/\");\n            }}\n          >\n            Log out\n          </Button>\n        </Grid2>\n      </Grid2>\n      <h1>Questionnaires Dashboard</h1>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Title</TableCell>\n              <TableCell>Link</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {questionnaires.map((questionnaire, i) => (\n              <TableRow key={questionnaire.id}>\n                <TableCell>{questionnaire.id}</TableCell>\n                <TableCell>{questionnaire.name}</TableCell>\n                <TableCell>\n                  {uniqueQuestionnaireIds.has(questionnaire.id) ? (\n                    <Typography>Questionnaire completed</Typography>\n                  ) : (\n                    <Link\n                      to={`/questionnaire/${questionnaire.id}`}\n                      state={{ questionnaire }}\n                    >\n                      {questionnaire.name}\n                    </Link>\n                  )}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Container>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}