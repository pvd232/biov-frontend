{"ast":null,"code":"var _jsxFileName = \"/Users/machina/Developer/biov-frontend/src/pages/admin-panel/AdminModal.tsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Modal from \"@mui/material/Modal\";\nimport { Table, TableCell, TableContainer, TableHead, TableRow } from \"@mui/material\";\nimport styles from \"./scss/AdminModal.module.scss\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AdminModal = props => {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleOpen,\n      children: \"Open modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.modal,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: /*#__PURE__*/_jsxDEV(TableHead, {\n              children: [/*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [\"Username: \", `${props.qStat.userId}`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [\"Questionnaires completed: \", `${props.qStat.count}`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: props.qStat.questionnaireResponses.map(qNairRes => qNairRes.questionResponses.map(qResponse => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: [\"Q: \", qResponse.questionText]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: [\"A: \", qResponse.getAnswerValue()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 23\n                }, this)))\n              }, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminModal, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n_c = AdminModal;\nvar _c;\n$RefreshReg$(_c, \"AdminModal\");","map":{"version":3,"names":["React","Button","Modal","Table","TableCell","TableContainer","TableHead","TableRow","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminModal","props","_s","open","setOpen","useState","handleOpen","handleClose","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","className","modal","qStat","userId","count","questionnaireResponses","map","qNairRes","questionResponses","qResponse","questionText","getAnswerValue","_c","$RefreshReg$"],"sources":["/Users/machina/Developer/biov-frontend/src/pages/admin-panel/AdminModal.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Modal from \"@mui/material/Modal\";\nimport { AdminModalProps } from \"../../types/pages/AdminModalProps\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport styles from \"./scss/AdminModal.module.scss\";\nexport const AdminModal: React.FC<AdminModalProps> = (props) => {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div>\n      <Button onClick={handleOpen}>Open modal</Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <div className={styles.modal}>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Username: {`${props.qStat.userId}`}</TableCell>\n                  <TableCell>\n                    Questionnaires completed: {`${props.qStat.count}`}\n                  </TableCell>\n                </TableRow>\n                <>\n                  {props.qStat.questionnaireResponses.map((qNairRes) =>\n                    qNairRes.questionResponses.map((qResponse) => (\n                      <TableRow>\n                        <TableCell>Q: {qResponse.questionText}</TableCell>\n                        <TableCell>A: {qResponse.getAnswerValue()}</TableCell>\n                      </TableRow>\n                    ))\n                  )}\n                </>\n              </TableHead>\n            </Table>\n          </TableContainer>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}