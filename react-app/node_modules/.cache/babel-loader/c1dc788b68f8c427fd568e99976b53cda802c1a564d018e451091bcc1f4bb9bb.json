{"ast":null,"code":"var _jsxFileName = \"/Users/machina/Developer/biov-frontend/src/context/UserContextProvider.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from \"react\";\nimport { UserSession } from \"./UserSession\";\n\n// Create the UserContext with default values\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext(undefined);\n\n// Define the UserProvider component\nexport const UserContextProvider = ({\n  children\n}) => {\n  _s();\n  const [userId, setUserId] = useState(null);\n  const [role, setRole] = useState(\"non-admin\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const login = user => {\n    logout();\n    setUserId(user.id);\n    setRole(user.role);\n    new UserSession().saveUserId(user.id);\n  };\n  const logout = () => {\n    setUserId(null);\n    new UserSession().clearUserId();\n  };\n  useEffect(() => {\n    const userId = new UserSession().getUserId();\n    if (userId) {\n      setUserId(userId);\n    }\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      userId,\n      role,\n      setRole,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the UserContext\n_s(UserContextProvider, \"lTdvl3lLL+0K2zfBPTNypV/Q+0g=\");\n_c = UserContextProvider;\nexport const useUser = () => {\n  _s2();\n  const context = useContext(UserContext);\n  if (context === undefined) {\n    throw new Error(\"useUser must be used within a UserProvider\");\n  }\n  return context;\n};\n_s2(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","UserSession","jsxDEV","_jsxDEV","UserContext","undefined","UserContextProvider","children","_s","userId","setUserId","role","setRole","loading","setLoading","error","setError","login","user","logout","id","saveUserId","clearUserId","getUserId","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","context","Error","$RefreshReg$"],"sources":["/Users/machina/Developer/biov-frontend/src/context/UserContextProvider.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from \"react\";\nimport { UserContextProviderProps } from \"../types/context/UserContextProviderProps\";\nimport { UserContextType } from \"../types/context/UserContextType\";\nimport { User } from \"../types/domains/User\";\nimport { UserSession } from \"./UserSession\";\n\n// Create the UserContext with default values\nexport const UserContext = createContext<UserContextType | undefined>(\n  undefined\n);\n\n// Define the UserProvider component\nexport const UserContextProvider: React.FC<UserContextProviderProps> = ({\n  children,\n}) => {\n  const [userId, setUserId] = useState<string | null>(null);\n  const [role, setRole] = useState<\"admin\" | \"non-admin\">(\"non-admin\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const login = (user: User) => {\n    logout();\n    setUserId(user.id);\n    setRole(user.role);\n    new UserSession().saveUserId(user.id);\n  };\n\n  const logout = () => {\n    setUserId(null);\n    new UserSession().clearUserId();\n  };\n\n  useEffect(() => {\n    const userId = new UserSession().getUserId();\n    if (userId) {\n      setUserId(userId);\n    }\n  }, [userId]);\n\n  return (\n    <UserContext.Provider value={{ userId, role, setRole, login, logout }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\n// Custom hook to use the UserContext\nexport const useUser = () => {\n  const context = useContext(UserContext);\n  if (context === undefined) {\n    throw new Error(\"useUser must be used within a UserProvider\");\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAI7E,SAASC,WAAW,QAAQ,eAAe;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CACtCQ,SACF,CAAC;;AAED;AACA,OAAO,MAAMC,mBAAuD,GAAGA,CAAC;EACtEC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAgB,IAAI,CAAC;EACzD,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAwB,WAAW,CAAC;EACpE,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAMmB,KAAK,GAAIC,IAAU,IAAK;IAC5BC,MAAM,CAAC,CAAC;IACRT,SAAS,CAACQ,IAAI,CAACE,EAAE,CAAC;IAClBR,OAAO,CAACM,IAAI,CAACP,IAAI,CAAC;IAClB,IAAIV,WAAW,CAAC,CAAC,CAACoB,UAAU,CAACH,IAAI,CAACE,EAAE,CAAC;EACvC,CAAC;EAED,MAAMD,MAAM,GAAGA,CAAA,KAAM;IACnBT,SAAS,CAAC,IAAI,CAAC;IACf,IAAIT,WAAW,CAAC,CAAC,CAACqB,WAAW,CAAC,CAAC;EACjC,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACd,MAAMS,MAAM,GAAG,IAAIR,WAAW,CAAC,CAAC,CAACsB,SAAS,CAAC,CAAC;IAC5C,IAAId,MAAM,EAAE;MACVC,SAAS,CAACD,MAAM,CAAC;IACnB;EACF,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,oBACEN,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,MAAM;MAAEE,IAAI;MAAEC,OAAO;MAAEK,KAAK;MAAEE;IAAO,CAAE;IAAAZ,QAAA,EACnEA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAArB,EAAA,CAjCaF,mBAAuD;AAAAwB,EAAA,GAAvDxB,mBAAuD;AAkCpE,OAAO,MAAMyB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGlC,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI6B,OAAO,KAAK5B,SAAS,EAAE;IACzB,MAAM,IAAI6B,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}