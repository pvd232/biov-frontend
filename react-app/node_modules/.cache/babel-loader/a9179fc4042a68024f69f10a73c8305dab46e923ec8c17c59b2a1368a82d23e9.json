{"ast":null,"code":"var _jsxFileName = \"/Users/machina/Developer/biov-frontend/src/pages/questionnaire-dashboard/questionnaire-selection/QuestionnaireSelection.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Container, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { useQuestionnaires } from \"../../../hooks/useQuestionnaires\";\nimport { useQuestionResponses } from \"../../../hooks/useQuestionResponses\";\nimport { useUser } from \"../../../hooks/useUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuestionnaireSelection = () => {\n  _s();\n  const {\n    questionnaires,\n    loading,\n    error\n  } = useQuestionnaires(); // Use the custom hook to get data from context\n  const questionResponses = useQuestionResponses().questionResponses;\n  const currUserId = useUser().userId;\n  const uniqueQuestionnaireIds = new Set();\n  for (const qRes of questionResponses) if (qRes.userId === currUserId && !uniqueQuestionnaireIds.has(qRes.questionnaireId)) uniqueQuestionnaireIds.add(qRes.questionnaireId);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Questionnaires Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: questionnaires.map((questionnaire, i) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: questionnaire.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: questionnaire.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/questionnaire/${questionnaire.id}`,\n                state: {\n                  questionnaire\n                },\n                children: questionnaire.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, questionnaire.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionnaireSelection, \"KHJVUTRg2bWtN6X40KfU8hDOhxg=\", false, function () {\n  return [useQuestionnaires, useQuestionResponses, useUser];\n});\n_c = QuestionnaireSelection;\nvar _c;\n$RefreshReg$(_c, \"QuestionnaireSelection\");","map":{"version":3,"names":["React","Container","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Link","useQuestionnaires","useQuestionResponses","useUser","jsxDEV","_jsxDEV","QuestionnaireSelection","_s","questionnaires","loading","error","questionResponses","currUserId","userId","uniqueQuestionnaireIds","Set","qRes","has","questionnaireId","add","children","fileName","_jsxFileName","lineNumber","columnNumber","component","map","questionnaire","i","id","name","to","state","_c","$RefreshReg$"],"sources":["/Users/machina/Developer/biov-frontend/src/pages/questionnaire-dashboard/questionnaire-selection/QuestionnaireSelection.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Container,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { useQuestionnaires } from \"../../../hooks/useQuestionnaires\";\nimport { useQuestionResponses } from \"../../../hooks/useQuestionResponses\";\nimport { useUser } from \"../../../hooks/useUser\";\n\nexport const QuestionnaireSelection: React.FC = () => {\n  const { questionnaires, loading, error } = useQuestionnaires(); // Use the custom hook to get data from context\n  const questionResponses = useQuestionResponses().questionResponses;\n  const currUserId = useUser().userId;\n  const uniqueQuestionnaireIds: Set<number> = new Set();\n  for (const qRes of questionResponses)\n    if (\n      qRes.userId === currUserId &&\n      !uniqueQuestionnaireIds.has(qRes.questionnaireId)\n    )\n      uniqueQuestionnaireIds.add(qRes.questionnaireId);\n  if (loading) {\n    return (\n      <Container>\n        <h1>Loading...</h1>\n      </Container>\n    );\n  }\n\n  if (error) {\n    return (\n      <Container>\n        <h1>Error: {error}</h1>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <h1>Questionnaires Dashboard</h1>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Title</TableCell>\n              <TableCell>Link</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {questionnaires.map((questionnaire, i) => (\n              <TableRow key={questionnaire.id}>\n                <TableCell>{questionnaire.id}</TableCell>\n                <TableCell>{questionnaire.name}</TableCell>\n                <TableCell>\n                  <Link\n                    to={`/questionnaire/${questionnaire.id}`}\n                    state={{ questionnaire }}\n                  >\n                    {questionnaire.name}\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Container>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}