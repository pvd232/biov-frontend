{"ast":null,"code":"var _jsxFileName = \"/Users/machina/Developer/biov-frontend/src/context/QuestionnaireStatsContextProvider.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { APIClient } from \"../helpers/APIC\";\nimport { UserSession } from \"./UserSession\";\nimport { useUser } from \"../hooks/useUser\";\nimport { QuestionnaireStat } from \"../helpers/QuestionnaireStat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuestionnaireStatsContext = /*#__PURE__*/createContext(undefined);\nexport const QuestionnaireStatsContextProvider = ({\n  children\n}) => {\n  _s();\n  var _useUser$userId;\n  const [questionnaireStats, setQuestionnaireStats] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const userId = (_useUser$userId = useUser().userId) !== null && _useUser$userId !== void 0 ? _useUser$userId : new UserSession().getUserId();\n\n  // Automatically fetch data on mount\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    try {\n      APIClient.fetchQuestionnaireStats().then(response => {\n        if (!response) {\n          throw new Error(\"Failed to fetch question responses\");\n        }\n        response.json().then(data => {\n          console.log(\"data\", data);\n          const questionnaireStatsData = data.map(json => new QuestionnaireStat(json));\n          setQuestionnaireStats(questionnaireStatsData);\n        });\n      });\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(QuestionnaireStatsContext.Provider, {\n    value: {\n      questionnaireStats,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionnaireStatsContextProvider, \"fnkW8eb12SN4DK8wBUzfmSaNZAc=\", false, function () {\n  return [useUser];\n});\n_c = QuestionnaireStatsContextProvider;\nvar _c;\n$RefreshReg$(_c, \"QuestionnaireStatsContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","APIClient","UserSession","useUser","QuestionnaireStat","jsxDEV","_jsxDEV","QuestionnaireStatsContext","undefined","QuestionnaireStatsContextProvider","children","_s","_useUser$userId","questionnaireStats","setQuestionnaireStats","loading","setLoading","error","setError","userId","getUserId","fetchQuestionnaireStats","then","response","Error","json","data","console","log","questionnaireStatsData","map","err","message","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/machina/Developer/biov-frontend/src/context/QuestionnaireStatsContextProvider.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport { APIClient } from \"../helpers/APIC\";\nimport { UserSession } from \"./UserSession\";\nimport { useUser } from \"../hooks/useUser\";\nimport { QuestionnaireStatsContextType } from \"../types/context/QuestionnaireStatsContextType\";\nimport { QuestionnaireStatsContextProviderProps } from \"../types/context/QuestionnaireStatsContextProviderProps\";\nimport { QuestionnaireStat } from \"../helpers/QuestionnaireStat\";\nexport const QuestionnaireStatsContext = createContext<\n  QuestionnaireStatsContextType | undefined\n>(undefined);\n\nexport const QuestionnaireStatsContextProvider: React.FC<\n  QuestionnaireStatsContextProviderProps\n> = ({ children }) => {\n  const [questionnaireStats, setQuestionnaireStats] = useState<\n    QuestionnaireStat[]\n  >([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const userId = useUser().userId ?? new UserSession().getUserId()!;\n\n  // Automatically fetch data on mount\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    try {\n      APIClient.fetchQuestionnaireStats().then((response) => {\n        if (!response) {\n          throw new Error(\"Failed to fetch question responses\");\n        }\n        response.json().then((data) => {\n          console.log(\"data\", data);\n          const questionnaireStatsData = data.map(\n            (json: any) => new QuestionnaireStat(json)\n          );\n          setQuestionnaireStats(questionnaireStatsData);\n        });\n      });\n    } catch (err: any) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [userId]);\n\n  return (\n    <QuestionnaireStatsContext.Provider\n      value={{\n        questionnaireStats,\n        loading,\n        error,\n      }}\n    >\n      {children}\n    </QuestionnaireStatsContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,OAAO,QAAQ,kBAAkB;AAG1C,SAASC,iBAAiB,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjE,OAAO,MAAMC,yBAAyB,gBAAGT,aAAa,CAEpDU,SAAS,CAAC;AAEZ,OAAO,MAAMC,iCAEZ,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACpB,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGf,QAAQ,CAE1D,EAAE,CAAC;EACL,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAMoB,MAAM,IAAAP,eAAA,GAAGT,OAAO,CAAC,CAAC,CAACgB,MAAM,cAAAP,eAAA,cAAAA,eAAA,GAAI,IAAIV,WAAW,CAAC,CAAC,CAACkB,SAAS,CAAC,CAAE;;EAEjE;EACApB,SAAS,CAAC,MAAM;IACdgB,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACFjB,SAAS,CAACoB,uBAAuB,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QACrD,IAAI,CAACA,QAAQ,EAAE;UACb,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;QACvD;QACAD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAAEI,IAAI,IAAK;UAC7BC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,IAAI,CAAC;UACzB,MAAMG,sBAAsB,GAAGH,IAAI,CAACI,GAAG,CACpCL,IAAS,IAAK,IAAIrB,iBAAiB,CAACqB,IAAI,CAC3C,CAAC;UACDX,qBAAqB,CAACe,sBAAsB,CAAC;QAC/C,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOE,GAAQ,EAAE;MACjBb,QAAQ,CAACa,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,SAAS;MACRhB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACG,MAAM,CAAC,CAAC;EAEZ,oBACEb,OAAA,CAACC,yBAAyB,CAAC0B,QAAQ;IACjCC,KAAK,EAAE;MACLrB,kBAAkB;MAClBE,OAAO;MACPE;IACF,CAAE;IAAAP,QAAA,EAEDA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACyB,CAAC;AAEzC,CAAC;AAAC3B,EAAA,CA7CWF,iCAEZ;EAAA,QAMgBN,OAAO;AAAA;AAAAoC,EAAA,GARX9B,iCAEZ;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}