{"ast":null,"code":"var _jsxFileName = \"/Users/machina/Developer/biov-frontend/src/pages/splash/login/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid2\";\nimport styles from \"./scss/Login.scss\";\nimport CustomTextField from \"../../shared/custom-text-field/CustomTextField\";\nimport BlackButton from \"../../shared/button/BlackButton\";\nimport { Typography } from \"@mui/material\";\nimport { useUser } from \"../../../types/userUser\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const {\n    login\n  } = useUser();\n\n  // State for the form inputs and errors\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const handleLoginClick = () => {\n    // Trim input values to remove leading/trailing whitespace\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n\n    // Validate the inputs\n    if (!trimmedUsername || !trimmedPassword) {\n      setError(\"Username and password cannot be empty or whitespace.\");\n      return;\n    }\n\n    // If validation passes, log the user in\n    const user = {\n      id: trimmedUsername,\n      password: trimmedPassword\n    };\n    login(user); // Set the user in context after a successful login\n    console.log(\"User logged in:\", user);\n    navigate(\"/questionnaire-home\");\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: styles.pageContainer,\n    id: \"page-container\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      id: \"login-card\",\n      sx: {\n        borderRadius: \"5px\",\n        boxShadow: \"0 0 5px 1px #e6e6e6\",\n        paddingBottom: \"80px\",\n        maxWidth: \"600px\",\n        justifyContent: \"center\",\n        maxHeight: \"450px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        width: \"80%\",\n        sx: {\n          justifyContent: \"center\",\n          paddingTop: \"40px\",\n          paddingLeft: \"40px\",\n          paddingRight: \"40px\",\n          rowGap: \"3vh\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          width: \"80%\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: \"Welcome back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          width: \"100%\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(CustomTextField, {\n            sx: {\n              width: \"80%\"\n            },\n            label: \"Username\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          width: \"100%\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(CustomTextField, {\n            sx: {\n              width: \"80%\"\n            },\n            label: \"Password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          width: \"100%\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          width: \"100%\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(BlackButton, {\n            sx: {\n              width: \"80%\"\n            },\n            onClick: handleLoginClick,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"yIpeqGSkjB0ym6rSaavxHMILTU4=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Grid","styles","CustomTextField","BlackButton","Typography","useUser","useNavigate","jsxDEV","_jsxDEV","Login","_s","login","username","setUsername","password","setPassword","error","setError","navigate","handleLoginClick","trimmedUsername","trim","trimmedPassword","user","id","console","log","container","className","pageContainer","children","sx","borderRadius","boxShadow","paddingBottom","maxWidth","justifyContent","maxHeight","width","paddingTop","paddingLeft","paddingRight","rowGap","variant","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","e","target","type","color","onClick","_c","$RefreshReg$"],"sources":["/Users/machina/Developer/biov-frontend/src/pages/splash/login/Login.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid2\";\nimport styles from \"./scss/Login.scss\";\nimport CustomTextField from \"../../shared/custom-text-field/CustomTextField\";\nimport BlackButton from \"../../shared/button/BlackButton\";\nimport { Typography } from \"@mui/material\";\nimport { useUser } from \"../../../types/userUser\";\nimport { useNavigate } from \"react-router-dom\";\nexport const Login: React.FC = () => {\n  const { login } = useUser();\n\n  // State for the form inputs and errors\n  const [username, setUsername] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [error, setError] = useState<string | null>(null);\n  const navigate = useNavigate();\n  const handleLoginClick = () => {\n    // Trim input values to remove leading/trailing whitespace\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n\n    // Validate the inputs\n    if (!trimmedUsername || !trimmedPassword) {\n      setError(\"Username and password cannot be empty or whitespace.\");\n      return;\n    }\n\n    // If validation passes, log the user in\n    const user = { id: trimmedUsername, password: trimmedPassword };\n    login(user); // Set the user in context after a successful login\n    console.log(\"User logged in:\", user);\n    navigate(\"/questionnaire-home\");\n  };\n\n  return (\n    <Grid container className={styles.pageContainer} id=\"page-container\">\n      <Grid\n        container\n        id=\"login-card\"\n        sx={{\n          borderRadius: \"5px\",\n          boxShadow: \"0 0 5px 1px #e6e6e6\",\n          paddingBottom: \"80px\",\n          maxWidth: \"600px\",\n          justifyContent: \"center\",\n          maxHeight: \"450px\",\n        }}\n      >\n        <Grid\n          container\n          width={\"80%\"}\n          sx={{\n            justifyContent: \"center\",\n            paddingTop: \"40px\",\n            paddingLeft: \"40px\",\n            paddingRight: \"40px\",\n            rowGap: \"3vh\",\n          }}\n        >\n          <Grid container width={\"80%\"}>\n            <Typography variant={\"h4\"}>Welcome back</Typography>\n          </Grid>\n\n          {/* Username input */}\n          <Grid container width={\"100%\"} justifyContent={\"center\"}>\n            <CustomTextField\n              sx={{ width: \"80%\" }}\n              label={\"Username\"}\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </Grid>\n\n          {/* Password input */}\n          <Grid container width={\"100%\"} justifyContent={\"center\"}>\n            <CustomTextField\n              sx={{ width: \"80%\" }}\n              label={\"Password\"}\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Grid>\n\n          {/* Error message */}\n          {error && (\n            <Grid container width={\"100%\"} justifyContent={\"center\"}>\n              <Typography color=\"error\">{error}</Typography>\n            </Grid>\n          )}\n\n          {/* Login button */}\n          <Grid container width={\"100%\"} justifyContent={\"center\"}>\n            <BlackButton sx={{ width: \"80%\" }} onClick={handleLoginClick}>\n              Login\n            </BlackButton>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,qBAAqB;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,eAAe,MAAM,gDAAgD;AAC5E,OAAOC,WAAW,MAAM,iCAAiC;AACzD,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/C,OAAO,MAAMC,KAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAM,CAAC,GAAGN,OAAO,CAAC,CAAC;;EAE3B;EACA,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAS,EAAE,CAAC;EACpD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAS,EAAE,CAAC;EACpD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAMmB,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACA,MAAMC,eAAe,GAAGR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACvC,MAAMC,eAAe,GAAGR,QAAQ,CAACO,IAAI,CAAC,CAAC;;IAEvC;IACA,IAAI,CAACD,eAAe,IAAI,CAACE,eAAe,EAAE;MACxCL,QAAQ,CAAC,sDAAsD,CAAC;MAChE;IACF;;IAEA;IACA,MAAMM,IAAI,GAAG;MAAEC,EAAE,EAAEJ,eAAe;MAAEN,QAAQ,EAAEQ;IAAgB,CAAC;IAC/DX,KAAK,CAACY,IAAI,CAAC,CAAC,CAAC;IACbE,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,IAAI,CAAC;IACpCL,QAAQ,CAAC,qBAAqB,CAAC;EACjC,CAAC;EAED,oBACEV,OAAA,CAACR,IAAI;IAAC2B,SAAS;IAACC,SAAS,EAAE3B,MAAM,CAAC4B,aAAc;IAACL,EAAE,EAAC,gBAAgB;IAAAM,QAAA,eAClEtB,OAAA,CAACR,IAAI;MACH2B,SAAS;MACTH,EAAE,EAAC,YAAY;MACfO,EAAE,EAAE;QACFC,YAAY,EAAE,KAAK;QACnBC,SAAS,EAAE,qBAAqB;QAChCC,aAAa,EAAE,MAAM;QACrBC,QAAQ,EAAE,OAAO;QACjBC,cAAc,EAAE,QAAQ;QACxBC,SAAS,EAAE;MACb,CAAE;MAAAP,QAAA,eAEFtB,OAAA,CAACR,IAAI;QACH2B,SAAS;QACTW,KAAK,EAAE,KAAM;QACbP,EAAE,EAAE;UACFK,cAAc,EAAE,QAAQ;UACxBG,UAAU,EAAE,MAAM;UAClBC,WAAW,EAAE,MAAM;UACnBC,YAAY,EAAE,MAAM;UACpBC,MAAM,EAAE;QACV,CAAE;QAAAZ,QAAA,gBAEFtB,OAAA,CAACR,IAAI;UAAC2B,SAAS;UAACW,KAAK,EAAE,KAAM;UAAAR,QAAA,eAC3BtB,OAAA,CAACJ,UAAU;YAACuC,OAAO,EAAE,IAAK;YAAAb,QAAA,EAAC;UAAY;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eAGPvC,OAAA,CAACR,IAAI;UAAC2B,SAAS;UAACW,KAAK,EAAE,MAAO;UAACF,cAAc,EAAE,QAAS;UAAAN,QAAA,eACtDtB,OAAA,CAACN,eAAe;YACd6B,EAAE,EAAE;cAAEO,KAAK,EAAE;YAAM,CAAE;YACrBU,KAAK,EAAE,UAAW;YAClBC,KAAK,EAAErC,QAAS;YAChBsC,QAAQ,EAAGC,CAAC,IAAKtC,WAAW,CAACsC,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAGPvC,OAAA,CAACR,IAAI;UAAC2B,SAAS;UAACW,KAAK,EAAE,MAAO;UAACF,cAAc,EAAE,QAAS;UAAAN,QAAA,eACtDtB,OAAA,CAACN,eAAe;YACd6B,EAAE,EAAE;cAAEO,KAAK,EAAE;YAAM,CAAE;YACrBU,KAAK,EAAE,UAAW;YAClBK,IAAI,EAAC,UAAU;YACfJ,KAAK,EAAEnC,QAAS;YAChBoC,QAAQ,EAAGC,CAAC,IAAKpC,WAAW,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EAGN/B,KAAK,iBACJR,OAAA,CAACR,IAAI;UAAC2B,SAAS;UAACW,KAAK,EAAE,MAAO;UAACF,cAAc,EAAE,QAAS;UAAAN,QAAA,eACtDtB,OAAA,CAACJ,UAAU;YAACkD,KAAK,EAAC,OAAO;YAAAxB,QAAA,EAAEd;UAAK;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CACP,eAGDvC,OAAA,CAACR,IAAI;UAAC2B,SAAS;UAACW,KAAK,EAAE,MAAO;UAACF,cAAc,EAAE,QAAS;UAAAN,QAAA,eACtDtB,OAAA,CAACL,WAAW;YAAC4B,EAAE,EAAE;cAAEO,KAAK,EAAE;YAAM,CAAE;YAACiB,OAAO,EAAEpC,gBAAiB;YAAAW,QAAA,EAAC;UAE9D;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX,CAAC;AAACrC,EAAA,CA7FWD,KAAe;EAAA,QACRJ,OAAO,EAMRC,WAAW;AAAA;AAAAkD,EAAA,GAPjB/C,KAAe;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}